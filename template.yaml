AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  db-monitor-lambda-python3.7

  Sample SAM Template for db-monitor-lambda-python3.7

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3

Parameters:
  LambdaSubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
    Description: These values will be used when the lambda function will be launched on the subnets which the values indicate.
  LambdaSecurityGroup:
    Type: AWS::EC2::SecurityGroup::Id
    Description: These security group will be attached to the lambda.
  SecretId:
    Type: String
    Description: This value indicates the Secret Id in AWS Secret Manager.
  SnsTopicArn:
    Type: String
    Description: This value indicates the arn values of target SNS topic.

Resources:
  DBMonitorFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: db_monitor/
      Handler: app.lambda_handler
      Runtime: python3.8
      Events:
        HourlyMonitoringSchedule:
          Type: Schedule # More info about Schedule Event Source: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-property-statemachine-schedule.html
          Properties:
            Description: Schedule to run the monitoring script evert minutes to check long transaction.
            Enabled: False # This schedule is disabled by default to avoid incurring charges.
            Schedule: "rate(5 minutes)"
      VpcConfig:
        SubnetIds: !Ref LambdaSubnetIds
        SecurityGroupIds: 
          - !Ref LambdaSecurityGroup
      Environment:
        Variables:
          dbsecret: !Ref SecretId
          snstopic: !Join
            - ''
            - - 'arn:aws:sns:'
              - !Ref "AWS::Region"
              - ':'
              - !Ref "AWS::AccountId"
              - ':'
              - !Ref SnsTopicArn
      Policies:
        - SNSPublishMessagePolicy:
            TopicName: !Ref SnsTopicArn
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Join
              - ''
              - - 'arn:aws:secretsmanager:'
                - !Ref "AWS::Region"
                - ':'
                - !Ref "AWS::AccountId"
                - ':secret:'
                - !Ref SecretId
                - '*'

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  DBMonitorFunction:
    Description: "This handler will be run every 5 minutes and it will check the long transactions and if it would find one, it will send notification to the user via SNS."
    Value: !GetAtt DBMonitorFunction.Arn
  DBMonitorFunctionIamRole:
    Description: "Implicit IAM Role created for db monitoring function"
    Value: !GetAtt DBMonitorFunctionRole.Arn
